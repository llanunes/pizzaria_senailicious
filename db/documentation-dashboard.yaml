openapi: 3.0.3
info:
  title: Pizzaria Senailicious - Dashboard API
  description: |-
   Api destinada a controle de produtos para uma pizzaria fictícia, na qual possui processamento de CRUD para cada tabela no banco
  termsOfService: http://swagger.io/terms/
  contact:
    email: matheus.alvesdoliveira06@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080
paths:
  /v1/pizzas:
    get:
      tags:
        - Pizza
      summary: Retorna todas as pizzas
      description: Retorna todas as pizzas registradas no sistema
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
  /v1/pizza/{id}:
    get:
      tags:
        - Pizza
      summary: Retorna um produto pelo id
      description: Listagem de um produto específico registrado no sistema
      parameters:
        - name: id
          in: path
          description: ID do produto para listar as informações dele
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pizza'
        '404':
          description: Não foram encontrados registros no Banco de Dados.
    put:
      tags:
        - Pizza
      summary: Atualize uma pizza existente
      description: Atualize uma pizza existente de acordo com o ID
      parameters:
        - name: id
          in: path
          description: ID da pizza
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pizza'
        required: true
      responses:
        '200':
          description: Sucesso
        '400':
          description: Requisição ruim
        '404':
          description: Não foram encontrados registros no Banco de Dados.
    delete:
      tags:
        - Pizza
      summary: Delete pizza
      description: Excluir uma pizza
      parameters:
        - name: id
          in: path
          description: ID da pizza para retornar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '400':
          description: Id inválido
        '404':
          description: Não foram encontrados registros no Banco de Dados.
  /v1/pizza:
    post:
      tags:
        - Pizza
      summary: Inserir novo produto
      description: Insere um novo produto no banco de dados
      requestBody:
        description: Body da requisição
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/insertPizza'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pizza'          
        '400':
          description: Campos inválidos
  /v1/mensagens:
    get:
      tags:
        - Mensagem
      summary: Lista as mensagens do banco
      description: Retorna todas as mensagens do banco
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
  /v1/mensagem/{id}:
    get:
      tags:
        - Mensagem
      summary: Retorna uma mensagem pelo id
      description: Retorna uma mensagem especificada pelo id
      parameters:
        - name: id
          in: path
          description: ID da mensagem para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
    put:
      tags:
        - Mensagem
      summary: Atualiza uma mensagem pelo id
      description: Atualiza uma mensagem pelo id
      parameters:
        - name: id
          in: path
          description: ID da mensagem para buscar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Body da requisição
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mensagem'
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Body vazio
        '415':
          description: Content-type errado
    delete:
      tags:
        - Mensagem
      summary: Deleta uma mensagem pelo id
      description: Deleta uma mensagem pelo id
      parameters:
        - name: id
          in: path
          description: ID da mensagem para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Id errado
  /v1/mensagem:
    post:
      tags:
        - Mensagem
      summary: Insere uma mensagem no banco
      description: Inserir uma nova mensagem no banco
      requestBody:
        description: Inserir uma mensagem no banco
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mensagem'
      responses:
        '201':
          description: Mensagem enviada
        '400':
          description: Body da requisição vazio
        '415':
          description: Content Type errado
  /v1/administradores:
    get:
      tags:
        - Administradores
      summary: Lista os administradores do banco
      description: Retorna todos os administradores do banco
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
  /v1/administrador/{id}:
    get:
      tags:
        - Administradores
      summary: Retorna um administrador pelo id
      description: Retorna um administrador especificado pelo id
      parameters:
        - name: id
          in: path
          description: ID do admin para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
        '400':
          description: ID inválido
    put:
      tags:
        - Administradores
      summary: Atualiza um administrador pelo id
      description: Atualiza um administrador pelo id
      parameters:
        - name: id
          in: path
          description: ID do administrador para buscar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Body da requisição
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/administrador'
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Body vazio
        '415':
          description: Content-type errado
    delete:
      tags:
        - Administradores
      summary: Deleta um administrador pelo id
      description: Deleta um administrador pelo id
      parameters:
        - name: id
          in: path
          description: ID do administrador para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Id errado
  /v1/administrador:
    post:
      tags:
        - Administradores
      summary: Insere um novo administrador no banco
      description: Inserir um novo administrador no banco
      requestBody:
        description: Inserir um administrador no banco
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/administrador'
      responses:
        '201':
          description: Mensagem enviada
        '400':
          description: Body da requisição vazio
        '415':
          description: Content Type errado
  /v1/login/admin:
    post:
      tags:
        - Administradores
      summary: Gerar a jwt
      description: Logar o admin para gerar a jwt
      requestBody:
        description: Passar as informações de login do admin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/administrador'
      responses:
        '200':
          description: Sucesso
        '403':
          description: Login não identificado
  /v1/ingredientes:
    get:
      tags:
        - Ingredientes
      summary: Lista os ingredientes do banco
      description: Retorna todos os ingredientes do banco
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
  /v1/ingrediente/{id}:
    get:
      tags:
        - Ingredientes
      summary: Retorna um ingrediente pelo id
      description: Retorna um ingrediente especificado pelo id
      parameters:
        - name: id
          in: path
          description: ID do ingrediente para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
        '400':
          description: ID inválido
    put:
      tags:
        - Ingredientes
      summary: Atualiza um ingrediente pelo id
      description: Atualiza um ingrediente pelo id
      parameters:
        - name: id
          in: path
          description: ID do ingrediente para buscar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Body da requisição
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ingrediente'
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Body vazio
        '415':
          description: Content-type errado
    delete:
      tags:
        - Ingredientes
      summary: Deleta um ingrediente pelo id
      description: Deleta um ingrediente pelo id
      parameters:
        - name: id
          in: path
          description: ID do ingrediente para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Id errado
  /v1/ingrediente:
    post:
      tags:
        - Ingredientes
      summary: Insere um ingrediente no banco
      description: Inserir um ingrediente no banco
      requestBody:
        description: Inserir um ingrediente no banco
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ingrediente'
      responses:
        '201':
          description: Mensagem enviada
        '400':
          description: Body da requisição vazio
        '415':
          description: Content Type errado
  /v1/tipopizzas:
    get:
      tags:
        - Tipo Pizza
      summary: Lista os tipos de pizza do banco
      description: Retorna todos os tipos de pizza do banco
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
  /v1/tipopizza/{id}:
    get:
      tags:
        - Tipo Pizza
      summary: Retorna um tipo de pizza pelo id
      description: Retorna um tipo de pizza especificado pelo id
      parameters:
        - name: id
          in: path
          description: ID do tipo de pizza para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
        '400':
          description: ID inválido
    put:
      tags:
        - Tipo Pizza
      summary: Atualiza um tipo de pizza pelo id
      description: Atualiza um tipo de pizza pelo id
      parameters:
        - name: id
          in: path
          description: ID do tipo de pizza para buscar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Body da requisição
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tipopizza'
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Body vazio
        '415':
          description: Content-type errado
    delete:
      tags:
        - Tipo Pizza
      summary: Deleta um tipo de pizza pelo id
      description: Deleta um tipo de pizza pelo id
      parameters:
        - name: id
          in: path
          description: ID do tipo de pizza para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Id errado
  /v1/tipopizza:
    post:
      tags:
        - Tipo Pizza
      summary: Insere um tipo de pizza no banco
      description: Inserir um tipo de pizza no banco
      requestBody:
        description: Inserir um tipo de pizza no banco
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tipopizza'
      responses:
        '201':
          description: Tipo de pizza criado no banco
        '400':
          description: Body da requisição vazio
        '415':
          description: Content Type errado
  /v1/tipobebidas:
    get:
      tags:
        - Tipo Bebida
      summary: Lista os tipos de bebida do banco
      description: Retorna todos os tipos de bebida do banco
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
  /v1/tipobebida/{id}:
    get:
      tags:
        - Tipo Bebida
      summary: Retorna um tipo de bebida pelo id
      description: Retorna um tipo de bebida especificado pelo id
      parameters:
        - name: id
          in: path
          description: ID do tipo de bebida para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '404':
          description: Não foram encontrados registros no Banco de Dados.
        '400':
          description: ID inválido
    put:
      tags:
        - Tipo Bebida
      summary: Atualiza um tipo de bebida pelo id
      description: Atualiza um tipo de bebida pelo id
      parameters:
        - name: id
          in: path
          description: ID do tipo de bebida para buscar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Body da requisição
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tipobebida'
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Body vazio
        '415':
          description: Content-type errado
    delete:
      tags:
        - Tipo Bebida
      summary: Deleta um tipo de bebida pelo id
      description: Deleta um tipo de bebida pelo id
      parameters:
        - name: id
          in: path
          description: ID do tipo de bebida para buscar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso
        '400': 
          description: Id errado
  /v1/tipobebida:
    post:
      tags:
        - Tipo Bebida
      summary: Insere um tipo de bebida no banco
      description: Inserir um tipo de bebida no banco
      requestBody:
        description: Inserir um tipo de bebida no banco
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tipobebida'
      responses:
        '201':
          description: Bebida criada no banco
        '400':
          description: Body da requisição vazio
        '415':
          description: Content Type errado
components:
  schemas:
    insertPizza:
      required:
        - nome
        - tipo
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        imagem:
          type: string
        tamanho:
          type: string
        preco:
          type: number
        desconto:
          type: number
        id_tipo_produto:
          type: integer
    pizza:
      required:
        - nome
        - tipo
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        imagem:
          type: string
        tamanho:
          type: string
        preco:
          type: number
        desconto:
          type: number
        tipo:
          type: object
          properties:
            id:
              type: number
            nome:
              type: string
    mensagem:
      required:
        - nome
        - email
        - celular
        - mensagem
        - tipo_mensagem
      type: object
      properties: 
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        telefone:
          type: string
        celular:
          type: string
        mensagem:
          type: string
        tipo_mensagem:
          type: object
          properties:
            id:
              type: integer
            nome:
              type: string
    administrador:
      required:
        - nome
        - email
        - senha
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        senha:
          type: string
        foto:
          type: string
    ingrediente:
      required:
        - nome
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
    tipopizza:
      required:
        - nome
      type: object
      properties:
        id: 
          type: integer
        nome:
          type: string
    tipobebida:
      required:
        - nome
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
